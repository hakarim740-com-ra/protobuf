// swift-tools-version:5.5
// The swift-tools-version declares the minimum version of Swift required to build this package.

import PackageDescription

let package = Package(
  name: "Protobuf",
  products: [
    .library(
      name: "ProtobufCxx",
      targets: [
        "ProtobufCxx",
      ]
    )
  ],

  dependencies: [
//      .package(url: "https://github.com/google/abseil-cpp-binary.git", .exact("1.2024011602.0")),
  ],

  targets: [
    .target(
          name: "abseil",
          path: "third_party/abseil-cpp",
          exclude: [
            // main functions
            "absl/hash/internal/print_hash_of.cc",
            "absl/random/internal/gaussian_distribution_gentables.cc",
            "absl/random/internal/randen_benchmarks.cc",
            // tests
            "absl/log/scoped_mock_log.cc",
            "absl/log/internal/test_helpers.cc",
            "absl/log/internal/test_matchers.cc",
            "absl/base/spinlock_test_common.cc",
            "absl/base/internal/exception_safety_testing.cc",
            "absl/random/benchmarks.cc",
            // other
            "algorithm/algorithm_test.cc",
            "algorithm/container_test.cc",
            "base/internal/atomic_hook_test.cc",
            "base/internal/endian_test.cc",
            "base/internal/errno_saver_test.cc",
            "base/internal/exception_safety_testing.h",
            "base/internal/fast_type_id_test.cc",
            "base/internal/scoped_set_env_test.cc",
            "base/internal/spinlock_benchmark.cc",
            "base/internal/strerror_benchmark.cc",
            "base/internal/strerror_test.cc",
            "base/internal/sysinfo_test.cc",
            "base/internal/thread_identity_benchmark.cc",
            "base/internal/thread_identity_test.cc",
            "base/internal/unique_small_name_test.cc",
            "base/bit_cast_test.cc",
            "base/call_once_test.cc",
            "base/config_test.cc",
            "base/inline_variable_test.cc",
            "base/invoke_test.cc",
            "base/log_severity_test.cc",
            "base/no_destructor_benchmark.cc",
            "base/no_destructor_test.cc",
            "base/nullability_test.cc",
            "base/optimization_test.cc",
            "base/prefetch_test.cc",
            "base/raw_logging_test.cc",
            "base/throw_delegate_test.cc",
            "cleanup/cleanup_test.cc",
            "container/internal/common_policy_traits_test.cc",
            "container/internal/compressed_tuple_test.cc",
            "container/internal/container_memory_test.cc",
            "container/internal/hash_function_defaults_test.cc",
            "container/internal/hash_policy_testing_test.cc",
            "container/internal/hash_policy_traits_test.cc",
            "container/internal/hashtablez_sampler_test.cc",
            "container/internal/layout_benchmark.cc",
            "container/internal/layout_test.cc",
            "container/internal/node_slot_policy_test.cc",
            "container/internal/raw_hash_set_allocator_test.cc",
            "container/internal/raw_hash_set_benchmark.cc",
            "container/internal/raw_hash_set_test.cc",
            "container/internal/test_instance_tracker_test.cc",
            "container/internal/unordered_map_constructor_test.h",
            "container/internal/unordered_set_constructor_test.h",
            "container/btree_benchmark.cc",
            "container/btree_test.cc",
            "container/fixed_array_benchmark.cc",
            "container/fixed_array_exception_safety_test.cc",
            "container/fixed_array_test.cc",
            "container/flat_hash_map_test.cc",
            "container/flat_hash_set_test.cc",
            "container/inlined_vector_benchmark.cc",
            "container/inlined_vector_exception_safety_test.cc",
            "container/inlined_vector_test.cc",
            "container/sample_element_size_test.cc",
            "crc/internal/crc_cord_state_test.cc",
            "crc/internal/crc_memcpy_test.cc",
            "crc/internal/non_temporal_memcpy_test.cc",
            "crc/crc32c_benchmark.cc",
            "crc/crc32c_test.cc",
            "debugging/internal/demangle_test.cc",
            "debugging/failure_signal_handler_test.cc",
            "debugging/leak_check_fail_test.cc",
            "debugging/leak_check_test.cc",
            "debugging/stacktrace_benchmark.cc",
            "debugging/stacktrace_test.cc",
            "debugging/symbolize_test.cc",
            "flags/internal/path_util_test.cc",
            "flags/internal/program_name_test.cc",
            "flags/internal/sequence_lock_test.cc",
            "flags/internal/usage_test.cc",
            "flags/commandlineflag_test.cc",
            "flags/config_test.cc",
            "flags/flag_benchmark.cc",
            "flags/flag_test.cc",
            "flags/marshalling_test.cc",
            "flags/parse_test.cc",
            "flags/reflection_test.cc",
            "flags/usage_config_test.cc",
            "functional/any_invocable_test.cc",
            "functional/bind_front_test.cc",
            "functional/function_ref_test.cc",
            "functional/function_type_benchmark.cc",
            "hash/internal/city_test.cc",
            "hash/internal/low_level_hash_test.cc",
            "hash/hash_benchmark.cc",
            "hash/hash_instantiated_test.cc",
            "hash/hash_test.cc",
            "log/internal/fnmatch_benchmark.cc",
            "log/internal/fnmatch_test.cc",
            "log/internal/stderr_log_sink_test.cc",
            "log/internal/vlog_config_benchmark.cc",
            "log/absl_check_test.cc",
            "log/absl_log_basic_test.cc",
            "log/check_test.cc",
            "log/die_if_null_test.cc",
            "log/flags_test.cc",
            "log/globals_test.cc",
            "log/log_basic_test.cc",
            "log/log_benchmark.cc",
            "log/log_entry_test.cc",
            "log/log_format_test.cc",
            "log/log_macro_hygiene_test.cc",
            "log/log_modifier_methods_test.cc",
            "log/log_sink_test.cc",
            "log/log_streamer_test.cc",
            "log/scoped_mock_log.h",
            "log/stripping_test.cc",
            "log/structured_test.cc",
            "log/vlog_is_on_test.cc",
            "memory/memory_test.cc",
            "meta/type_traits_test.cc",
            "numeric/bits_benchmark.cc",
            "numeric/bits_test.cc",
            "numeric/int128_benchmark.cc",
            "numeric/int128_stream_test.cc",
            "numeric/int128_test.cc",
            "profiling/internal/exponential_biased_test.cc",
            "profiling/internal/periodic_sampler_benchmark.cc",
            "profiling/internal/periodic_sampler_test.cc",
            "profiling/internal/sample_recorder_test.cc",
            "random/internal/chi_square_test.cc",
            "random/internal/distribution_test_util_test.cc",
            "random/internal/explicit_seed_seq_test.cc",
            "random/internal/fast_uniform_bits_test.cc",
            "random/internal/fastmath_test.cc",
            "random/internal/generate_real_test.cc",
            "random/internal/iostream_state_saver_test.cc",
            "random/internal/nonsecure_base_test.cc",
            "random/internal/pcg_engine_test.cc",
            "random/internal/pool_urbg_test.cc",
            "random/internal/randen_engine_test.cc",
            "random/internal/randen_hwaes_test.cc",
            "random/internal/randen_slow_test.cc",
            "random/internal/randen_test.cc",
            "random/internal/salted_seed_seq_test.cc",
            "random/internal/seed_material_test.cc",
            "random/internal/traits_test.cc",
            "random/internal/uniform_helper_test.cc",
            "random/internal/wide_multiply_test.cc",
            "random/bernoulli_distribution_test.cc",
            "random/beta_distribution_test.cc",
            "random/bit_gen_ref_test.cc",
            "random/discrete_distribution_test.cc",
            "random/distributions_test.cc",
            "random/examples_test.cc",
            "random/exponential_distribution_test.cc",
            "random/gaussian_distribution_test.cc",
            "random/generators_test.cc",
            "random/log_uniform_int_distribution_test.cc",
            "random/mock_distributions.h",
            "random/mocking_bit_gen.h",
            "random/poisson_distribution_test.cc",
            "random/seed_sequences_test.cc",
            "random/uniform_int_distribution_test.cc",
            "random/uniform_real_distribution_test.cc",
            "random/zipf_distribution_test.cc",
            "status/status_test.cc",
            "status/statusor_test.cc",
            "strings/internal/str_format/arg_test.cc",
            "strings/internal/str_format/bind_test.cc",
            "strings/internal/str_format/checker_test.cc",
            "strings/internal/str_format/convert_test.cc",
            "strings/internal/str_format/extension_test.cc",
            "strings/internal/str_format/output_test.cc",
            "strings/internal/str_format/parser_test.cc",
            "strings/internal/charconv_bigint_test.cc",
            "strings/internal/charconv_parse_test.cc",
            "strings/internal/cord_data_edge_test.cc",
            "strings/internal/cord_rep_btree_navigator_test.cc",
            "strings/internal/cord_rep_btree_reader_test.cc",
            "strings/internal/cord_rep_btree_test.cc",
            "strings/internal/cord_rep_crc_test.cc",
            "strings/internal/cordz_functions_test.cc",
            "strings/internal/cordz_handle_test.cc",
            "strings/internal/cordz_info_statistics_test.cc",
            "strings/internal/cordz_info_test.cc",
            "strings/internal/cordz_sample_token_test.cc",
            "strings/internal/cordz_update_scope_test.cc",
            "strings/internal/cordz_update_tracker_test.cc",
            "strings/internal/damerau_levenshtein_distance_test.cc",
            "strings/internal/memutil_benchmark.cc",
            "strings/internal/memutil_test.cc",
            "strings/internal/ostringstream_benchmark.cc",
            "strings/internal/ostringstream_test.cc",
            "strings/internal/pow10_helper_test.cc",
            "strings/internal/resize_uninitialized_test.cc",
            "strings/internal/string_constant_test.cc",
            "strings/internal/utf8_test.cc",
            "strings/ascii_benchmark.cc",
            "strings/ascii_test.cc",
            "strings/char_formatting_test.cc",
            "strings/charconv_benchmark.cc",
            "strings/charconv_test.cc",
            "strings/charset_benchmark.cc",
            "strings/charset_test.cc",
            "strings/cord_buffer_test.cc",
            "strings/cord_test.cc",
            "strings/cordz_test.cc",
            "strings/escaping_benchmark.cc",
            "strings/escaping_test.cc",
            "strings/has_absl_stringify_test.cc",
            "strings/has_ostream_operator_test.cc",
            "strings/match_test.cc",
            "strings/numbers_benchmark.cc",
            "strings/numbers_test.cc",
            "strings/str_cat_benchmark.cc",
            "strings/str_cat_test.cc",
            "strings/str_format_test.cc",
            "strings/str_join_benchmark.cc",
            "strings/str_join_test.cc",
            "strings/str_replace_benchmark.cc",
            "strings/str_replace_test.cc",
            "strings/str_split_benchmark.cc",
            "strings/str_split_test.cc",
            "strings/string_view_benchmark.cc",
            "strings/string_view_test.cc",
            "strings/strip_test.cc",
            "strings/substitute_test.cc",
            "synchronization/internal/graphcycles_benchmark.cc",
            "synchronization/internal/graphcycles_test.cc",
            "synchronization/internal/kernel_timeout_test.cc",
            "synchronization/internal/per_thread_sem_test.cc",
            "synchronization/internal/waiter_test.cc",
            "synchronization/barrier_test.cc",
            "synchronization/blocking_counter_benchmark.cc",
            "synchronization/blocking_counter_test.cc",
            "synchronization/mutex_benchmark.cc",
            "synchronization/mutex_method_pointer_test.cc",
            "synchronization/mutex_test.cc",
            "synchronization/notification_test.cc",
            "time/internal/cctz/src/cctz_benchmark.cc",
            "time/internal/cctz/src/civil_time_test.cc",
            "time/internal/cctz/src/time_zone_format_test.cc",
            "time/internal/cctz/src/time_zone_lookup_test.cc",
            "time/civil_time_benchmark.cc",
            "time/civil_time_test.cc",
            "time/clock_benchmark.cc",
            "time/clock_test.cc",
            "time/duration_benchmark.cc",
            "time/duration_test.cc",
            "time/flag_test.cc",
            "time/format_benchmark.cc",
            "time/format_test.cc",
            "time/time_benchmark.cc",
            "time/time_test.cc",
            "time/time_zone_test.cc",
            "types/any_exception_safety_test.cc",
            "types/any_test.cc",
            "types/compare_test.cc",
            "types/optional_exception_safety_test.cc",
            "types/optional_test.cc",
            "types/span_test.cc",
            "types/variant_benchmark.cc",
            "types/variant_exception_safety_test.cc",
            "types/variant_test.cc",
            "utility/internal/if_constexpr_test.cc",
            "utility/utility_test.cc",
            //
            "absl/algorithm/algorithm_test.cc",
            "absl/algorithm/container_test.cc",
            "absl/base/internal/atomic_hook_test.cc",
            "absl/base/internal/endian_test.cc",
            "absl/base/internal/errno_saver_test.cc",
            "absl/base/internal/exception_safety_testing.h",
            "absl/base/internal/fast_type_id_test.cc",
            "absl/base/internal/scoped_set_env_test.cc",
            "absl/base/internal/spinlock_benchmark.cc",
            "absl/base/internal/strerror_benchmark.cc",
            "absl/base/internal/strerror_test.cc",
            "absl/base/internal/sysinfo_test.cc",
            "absl/base/internal/thread_identity_benchmark.cc",
            "absl/base/internal/thread_identity_test.cc",
            "absl/base/internal/unique_small_name_test.cc",
            "absl/base/bit_cast_test.cc",
            "absl/base/call_once_test.cc",
            "absl/base/config_test.cc",
            "absl/base/inline_variable_test.cc",
            "absl/base/invoke_test.cc",
            "absl/base/log_severity_test.cc",
            "absl/base/no_destructor_benchmark.cc",
            "absl/base/no_destructor_test.cc",
            "absl/base/nullability_test.cc",
            "absl/base/optimization_test.cc",
            "absl/base/prefetch_test.cc",
            "absl/base/raw_logging_test.cc",
            "absl/base/throw_delegate_test.cc",
            "absl/cleanup/cleanup_test.cc",
            "absl/container/internal/common_policy_traits_test.cc",
            "absl/container/internal/compressed_tuple_test.cc",
            "absl/container/internal/container_memory_test.cc",
            "absl/container/internal/hash_function_defaults_test.cc",
            "absl/container/internal/hash_policy_testing_test.cc",
            "absl/container/internal/hash_policy_traits_test.cc",
            "absl/container/internal/hashtablez_sampler_test.cc",
            "absl/container/internal/layout_benchmark.cc",
            "absl/container/internal/layout_test.cc",
            "absl/container/internal/node_slot_policy_test.cc",
            "absl/container/internal/raw_hash_set_allocator_test.cc",
            "absl/container/internal/raw_hash_set_benchmark.cc",
            "absl/container/internal/raw_hash_set_test.cc",
            "absl/container/internal/test_instance_tracker_test.cc",
            "absl/container/internal/unordered_map_constructor_test.h",
            "absl/container/internal/unordered_set_constructor_test.h",
            "absl/container/btree_benchmark.cc",
            "absl/container/btree_test.cc",
            "absl/container/fixed_array_benchmark.cc",
            "absl/container/fixed_array_exception_safety_test.cc",
            "absl/container/fixed_array_test.cc",
            "absl/container/flat_hash_map_test.cc",
            "absl/container/flat_hash_set_test.cc",
            "absl/container/inlined_vector_benchmark.cc",
            "absl/container/inlined_vector_exception_safety_test.cc",
            "absl/container/inlined_vector_test.cc",
            "absl/container/sample_element_size_test.cc",
            "absl/crc/internal/crc_cord_state_test.cc",
            "absl/crc/internal/crc_memcpy_test.cc",
            "absl/crc/internal/non_temporal_memcpy_test.cc",
            "absl/crc/crc32c_benchmark.cc",
            "absl/crc/crc32c_test.cc",
            "absl/debugging/internal/demangle_test.cc",
            "absl/debugging/failure_signal_handler_test.cc",
            "absl/debugging/leak_check_fail_test.cc",
            "absl/debugging/leak_check_test.cc",
            "absl/debugging/stacktrace_benchmark.cc",
            "absl/debugging/stacktrace_test.cc",
            "absl/debugging/symbolize_test.cc",
            "absl/flags/internal/path_util_test.cc",
            "absl/flags/internal/program_name_test.cc",
            "absl/flags/internal/sequence_lock_test.cc",
            "absl/flags/internal/usage_test.cc",
            "absl/flags/commandlineflag_test.cc",
            "absl/flags/config_test.cc",
            "absl/flags/flag_benchmark.cc",
            "absl/flags/flag_test.cc",
            "absl/flags/marshalling_test.cc",
            "absl/flags/parse_test.cc",
            "absl/flags/reflection_test.cc",
            "absl/flags/usage_config_test.cc",
            "absl/functional/any_invocable_test.cc",
            "absl/functional/bind_front_test.cc",
            "absl/functional/function_ref_test.cc",
            "absl/functional/function_type_benchmark.cc",
            "absl/hash/internal/city_test.cc",
            "absl/hash/internal/low_level_hash_test.cc",
            "absl/hash/hash_benchmark.cc",
            "absl/hash/hash_instantiated_test.cc",
            "absl/hash/hash_test.cc",
            "absl/log/internal/fnmatch_benchmark.cc",
            "absl/log/internal/fnmatch_test.cc",
            "absl/log/internal/stderr_log_sink_test.cc",
            "absl/log/internal/vlog_config_benchmark.cc",
            "absl/log/absl_check_test.cc",
            "absl/log/absl_log_basic_test.cc",
            "absl/log/check_test.cc",
            "absl/log/die_if_null_test.cc",
            "absl/log/flags_test.cc",
            "absl/log/globals_test.cc",
            "absl/log/log_basic_test.cc",
            "absl/log/log_benchmark.cc",
            "absl/log/log_entry_test.cc",
            "absl/log/log_format_test.cc",
            "absl/log/log_macro_hygiene_test.cc",
            "absl/log/log_modifier_methods_test.cc",
            "absl/log/log_sink_test.cc",
            "absl/log/log_streamer_test.cc",
            "absl/log/scoped_mock_log.h",
            "absl/log/stripping_test.cc",
            "absl/log/structured_test.cc",
            "absl/log/vlog_is_on_test.cc",
            "absl/memory/memory_test.cc",
            "absl/meta/type_traits_test.cc",
            "absl/numeric/bits_benchmark.cc",
            "absl/numeric/bits_test.cc",
            "absl/numeric/int128_benchmark.cc",
            "absl/numeric/int128_stream_test.cc",
            "absl/numeric/int128_test.cc",
            "absl/profiling/internal/exponential_biased_test.cc",
            "absl/profiling/internal/periodic_sampler_benchmark.cc",
            "absl/profiling/internal/periodic_sampler_test.cc",
            "absl/profiling/internal/sample_recorder_test.cc",
            "absl/random/internal/chi_square_test.cc",
            "absl/random/internal/distribution_test_util_test.cc",
            "absl/random/internal/explicit_seed_seq_test.cc",
            "absl/random/internal/fast_uniform_bits_test.cc",
            "absl/random/internal/fastmath_test.cc",
            "absl/random/internal/generate_real_test.cc",
            "absl/random/internal/iostream_state_saver_test.cc",
            "absl/random/internal/nonsecure_base_test.cc",
            "absl/random/internal/pcg_engine_test.cc",
            "absl/random/internal/pool_urbg_test.cc",
            "absl/random/internal/randen_engine_test.cc",
            "absl/random/internal/randen_hwaes_test.cc",
            "absl/random/internal/randen_slow_test.cc",
            "absl/random/internal/randen_test.cc",
            "absl/random/internal/salted_seed_seq_test.cc",
            "absl/random/internal/seed_material_test.cc",
            "absl/random/internal/traits_test.cc",
            "absl/random/internal/uniform_helper_test.cc",
            "absl/random/internal/wide_multiply_test.cc",
            "absl/random/bernoulli_distribution_test.cc",
            "absl/random/beta_distribution_test.cc",
            "absl/random/bit_gen_ref_test.cc",
            "absl/random/discrete_distribution_test.cc",
            "absl/random/distributions_test.cc",
            "absl/random/examples_test.cc",
            "absl/random/exponential_distribution_test.cc",
            "absl/random/gaussian_distribution_test.cc",
            "absl/random/generators_test.cc",
            "absl/random/log_uniform_int_distribution_test.cc",
            "absl/random/mock_distributions.h",
            "absl/random/mocking_bit_gen.h",
            "absl/random/poisson_distribution_test.cc",
            "absl/random/seed_sequences_test.cc",
            "absl/random/uniform_int_distribution_test.cc",
            "absl/random/uniform_real_distribution_test.cc",
            "absl/random/zipf_distribution_test.cc",
            "absl/status/status_test.cc",
            "absl/status/statusor_test.cc",
            "absl/strings/internal/str_format/arg_test.cc",
            "absl/strings/internal/str_format/bind_test.cc",
            "absl/strings/internal/str_format/checker_test.cc",
            "absl/strings/internal/str_format/convert_test.cc",
            "absl/strings/internal/str_format/extension_test.cc",
            "absl/strings/internal/str_format/output_test.cc",
            "absl/strings/internal/str_format/parser_test.cc",
            "absl/strings/internal/charconv_bigint_test.cc",
            "absl/strings/internal/charconv_parse_test.cc",
            "absl/strings/internal/cord_data_edge_test.cc",
            "absl/strings/internal/cord_rep_btree_navigator_test.cc",
            "absl/strings/internal/cord_rep_btree_reader_test.cc",
            "absl/strings/internal/cord_rep_btree_test.cc",
            "absl/strings/internal/cord_rep_crc_test.cc",
            "absl/strings/internal/cordz_functions_test.cc",
            "absl/strings/internal/cordz_handle_test.cc",
            "absl/strings/internal/cordz_info_statistics_test.cc",
            "absl/strings/internal/cordz_info_test.cc",
            "absl/strings/internal/cordz_sample_token_test.cc",
            "absl/strings/internal/cordz_update_scope_test.cc",
            "absl/strings/internal/cordz_update_tracker_test.cc",
            "absl/strings/internal/damerau_levenshtein_distance_test.cc",
            "absl/strings/internal/memutil_benchmark.cc",
            "absl/strings/internal/memutil_test.cc",
            "absl/strings/internal/ostringstream_benchmark.cc",
            "absl/strings/internal/ostringstream_test.cc",
            "absl/strings/internal/pow10_helper_test.cc",
            "absl/strings/internal/resize_uninitialized_test.cc",
            "absl/strings/internal/string_constant_test.cc",
            "absl/strings/internal/utf8_test.cc",
            "absl/strings/ascii_benchmark.cc",
            "absl/strings/ascii_test.cc",
            "absl/strings/char_formatting_test.cc",
            "absl/strings/charconv_benchmark.cc",
            "absl/strings/charconv_test.cc",
            "absl/strings/charset_benchmark.cc",
            "absl/strings/charset_test.cc",
            "absl/strings/cord_buffer_test.cc",
            "absl/strings/cord_test.cc",
            "absl/strings/cordz_test.cc",
            "absl/strings/escaping_benchmark.cc",
            "absl/strings/escaping_test.cc",
            "absl/strings/has_absl_stringify_test.cc",
            "absl/strings/has_ostream_operator_test.cc",
            "absl/strings/match_test.cc",
            "absl/strings/numbers_benchmark.cc",
            "absl/strings/numbers_test.cc",
            "absl/strings/str_cat_benchmark.cc",
            "absl/strings/str_cat_test.cc",
            "absl/strings/str_format_test.cc",
            "absl/strings/str_join_benchmark.cc",
            "absl/strings/str_join_test.cc",
            "absl/strings/str_replace_benchmark.cc",
            "absl/strings/str_replace_test.cc",
            "absl/strings/str_split_benchmark.cc",
            "absl/strings/str_split_test.cc",
            "absl/strings/string_view_benchmark.cc",
            "absl/strings/string_view_test.cc",
            "absl/strings/strip_test.cc",
            "absl/strings/substitute_test.cc",
            "absl/synchronization/internal/graphcycles_benchmark.cc",
            "absl/synchronization/internal/graphcycles_test.cc",
            "absl/synchronization/internal/kernel_timeout_test.cc",
            "absl/synchronization/internal/per_thread_sem_test.cc",
            "absl/synchronization/internal/waiter_test.cc",
            "absl/synchronization/barrier_test.cc",
            "absl/synchronization/blocking_counter_benchmark.cc",
            "absl/synchronization/blocking_counter_test.cc",
            "absl/synchronization/mutex_benchmark.cc",
            "absl/synchronization/mutex_method_pointer_test.cc",
            "absl/synchronization/mutex_test.cc",
            "absl/synchronization/notification_test.cc",
            "absl/time/internal/cctz/src/cctz_benchmark.cc",
            "absl/time/internal/cctz/src/civil_time_test.cc",
            "absl/time/internal/cctz/src/time_zone_format_test.cc",
            "absl/time/internal/cctz/src/time_zone_lookup_test.cc",
            "absl/time/civil_time_benchmark.cc",
            "absl/time/civil_time_test.cc",
            "absl/time/clock_benchmark.cc",
            "absl/time/clock_test.cc",
            "absl/time/duration_benchmark.cc",
            "absl/time/duration_test.cc",
            "absl/time/flag_test.cc",
            "absl/time/format_benchmark.cc",
            "absl/time/format_test.cc",
            "absl/time/time_benchmark.cc",
            "absl/time/time_test.cc",
            "absl/time/time_zone_test.cc",
            "absl/types/any_exception_safety_test.cc",
            "absl/types/any_test.cc",
            "absl/types/compare_test.cc",
            "absl/types/optional_exception_safety_test.cc",
            "absl/types/optional_test.cc",
            "absl/types/span_test.cc",
            "absl/types/variant_benchmark.cc",
            "absl/types/variant_exception_safety_test.cc",
            "absl/types/variant_test.cc",
            "absl/utility/internal/if_constexpr_test.cc",
            "absl/utility/utility_test.cc",

            "base/exception_safety_testing_test.cc",
            "absl/base/exception_safety_testing_test.cc",
            "container/internal/unordered_map_test.cc",
            "absl/container/internal/unordered_map_test.cc",
            "container/internal/unordered_set_test.cc",
            "absl/container/internal/unordered_set_test.cc",
            "log/scoped_mock_log_test.cc",
            "absl/log/scoped_mock_log_test.cc",
            "random/mock_distributions_test.cc",
            "absl/random/mock_distributions_test.cc",
            "random/mocking_bit_gen_test.cc",
            "absl/random/mocking_bit_gen_test.cc",

            "container/node_hash_set_test.cc",
            "absl/container/node_hash_set_test.cc",

            "container/node_hash_map_test.cc",
            "absl/container/node_hash_map_test.cc",

            "base/internal/low_level_alloc_test.cc",
            "absl/base/internal/low_level_alloc_test.cc",
          ],
          sources: [
            "absl/"
          ],
          publicHeadersPath: ".",
          cSettings: [
            .headerSearchPath("./"),
          ],
          linkerSettings: [
            .linkedFramework("CoreFoundation"),
          ]
    ),
    .target(
      name: "ProtobufCxx",
      dependencies: [
//        .product(name:"abseil", package: "abseil-cpp-binary"),
        "abseil"
      ],
      path: "src",
      exclude: [
        "src/google/protobuf/compiler",
        "src/google/protobuf/json",
        
        "src/google/protobuf/any_test.cc",
        "src/google/protobuf/any_test.proto",
        "src/google/protobuf/arena_align_test.cc",
        "src/google/protobuf/arenaz_sampler_test.cc",
        "src/google/protobuf/debug_counter_test.cc",
        "src/google/protobuf/descriptor_visitor_test.cc",
        "src/google/protobuf/drop_unknown_fields_test.cc",
        "src/google/protobuf/feature_resolver_test.cc",
        "src/google/protobuf/generated_enum_util_test.cc",
        "src/google/protobuf/generated_message_tctable_lite_test.cc",
        "src/google/protobuf/has_bits_test.cc",
        "src/google/protobuf/map_field_test.cc",
        "src/google/protobuf/map_test.cc",
        "src/google/protobuf/map_test.inc",
        "src/google/protobuf/no_field_presence_test.cc",
        "src/google/protobuf/port_test.cc",
        "src/google/protobuf/preserve_unknown_enum_test.cc",
        "src/google/protobuf/raw_ptr_test.cc",
        "src/google/protobuf/redaction_metric_test.cc",
        "src/google/protobuf/reflection_mode_test.cc",
        "src/google/protobuf/reflection_visit_fields_test.cc",
        "src/google/protobuf/retention_test.cc",
        "src/google/protobuf/string_block_test.cc",
        "src/google/protobuf/string_view_test.cc",
        "src/google/protobuf/unredacted_debug_format_for_test_test.cc",
        "src/google/protobuf/unredacted_debug_format_for_test.cc",
        "src/google/protobuf/unredacted_debug_format_for_test.h",
        "src/google/protobuf/varint_shuffle_test.cc",

        "src/google/protobuf/io/printer_death_test.cc",
        "src/google/protobuf/io/test_zero_copy_stream_test.cc",
        "src/google/protobuf/io/zero_copy_sink_test.cc",

        "src/google/protobuf/util/delimited_message_util_test.cc",
        "src/google/protobuf/util/field_comparator_test.cc",
        "src/google/protobuf/util/field_mask_util_test.cc",
        "src/google/protobuf/util/time_util_test.cc",
        "src/google/protobuf/util/type_resolver_util_test.cc",

        // unittest
        "src/google/protobuf/arena_unittest.cc",
        "src/google/protobuf/arenastring_unittest.cc",
        "src/google/protobuf/descriptor_database_unittest.cc",
        "src/google/protobuf/descriptor_unittest.cc",
        "src/google/protobuf/dynamic_message_unittest.cc",
        "src/google/protobuf/edition_message_unittest.cc",
        "src/google/protobuf/edition_unittest.proto",
        "src/google/protobuf/extension_set_unittest.cc",
        "src/google/protobuf/generated_message_reflection_unittest.cc",
        "src/google/protobuf/inlined_string_field_unittest.cc",
        "src/google/protobuf/internal_message_util_unittest.cc",
        "src/google/protobuf/lite_arena_unittest.cc",
        "src/google/protobuf/lite_unittest.cc",
        "src/google/protobuf/map_lite_unittest.proto",
        "src/google/protobuf/map_proto2_unittest.proto",
        "src/google/protobuf/map_proto3_unittest.proto",
        "src/google/protobuf/map_unittest.proto",
        "src/google/protobuf/message_unittest_legacy_apis.inc",
        "src/google/protobuf/message_unittest.cc",
        "src/google/protobuf/message_unittest.inc",
        "src/google/protobuf/proto3_arena_lite_unittest.cc",
        "src/google/protobuf/proto3_arena_unittest.cc",
        "src/google/protobuf/proto3_lite_unittest.cc",
        "src/google/protobuf/proto3_lite_unittest.inc",
        "src/google/protobuf/reflection_ops_unittest.cc",
        "src/google/protobuf/repeated_field_reflection_unittest.cc",
        "src/google/protobuf/repeated_field_reflection_unittest.inc",
        "src/google/protobuf/repeated_field_unittest.cc",
        "src/google/protobuf/text_format_unittest.cc",
        "src/google/protobuf/unknown_field_set_unittest.cc",
        "src/google/protobuf/well_known_types_unittest.cc",
        "src/google/protobuf/wire_format_unittest.cc",
        "src/google/protobuf/wire_format_unittest.inc",

        "src/google/io/coded_stream_unittest.cc",
        "src/google/io/io_win32_unittest.cc",
        "src/google/io/printer_unittest.cc",
        "src/google/io/tokenizer_unittest.cc",
        "src/google/io/zero_copy_stream_unittest.cc",

        "src/google/stubs/common_unittest.cc",

        "src/google/protobuf/util/message_differencer_unittest_proto3.proto",
        "src/google/protobuf/util/message_differencer_unittest.cc",
        "src/google/protobuf/util/message_differencer_unittest.proto",

        // test_util
        "src/google/protobuf/arena_test_util.cc",
        "src/google/protobuf/arena_test_util.h",
        "src/google/protobuf/map_lite_test_util.cc",
        "src/google/protobuf/map_lite_test_util.h",
        "src/google/protobuf/map_test_util_impl.h",
        "src/google/protobuf/map_test_util.h",
        "src/google/protobuf/map_test_util.inc",
        "src/google/protobuf/test_util_lite.cc",
        "src/google/protobuf/test_util_lite.h",
        "src/google/protobuf/test_util.cc",
        "src/google/protobuf/test_util.h",
        "src/google/protobuf/test_util.inc",
        "src/google/protobuf/test_util2.h",

        "src/google/protobuf/map_lite_test_util.cc",
        "src/google/protobuf/map_lite_test_util.h",

        "src/google/protobuf/map_test_util_impl.h",
        "src/google/protobuf/map_test_util.h",
        "src/google/protobuf/map_test_util.inc",

        "src/google/protobuf/reflection_tester.cc",
        "src/google/protobuf/reflection_tester.h",
      ],
      sources: [
        /*"src/google/protobuf/any_lite.cc",
        "src/google/protobuf/any.cc",
        "src/google/protobuf/any.h",
        "src/google/protobuf/any.pb.cc",
        "src/google/protobuf/any.pb.h",
        "src/google/protobuf/api.pb.cc",
        "src/google/protobuf/api.pb.h",
        "src/google/protobuf/arena_align.cc",
        "src/google/protobuf/arena_align.h",
        "src/google/protobuf/arena_allocation_policy.h",
        "src/google/protobuf/arena_cleanup.h",
        "src/google/protobuf/arena_test_util.cc",
        "src/google/protobuf/arena_test_util.h",
        "src/google/protobuf/arena.cc",
        "src/google/protobuf/arena.h",
        "src/google/protobuf/arenastring.cc",
        "src/google/protobuf/arenastring.h",
        "src/google/protobuf/arenaz_sampler.cc",
        "src/google/protobuf/arenaz_sampler.h",
        "src/google/protobuf/cpp_edition_defaults.h",
        "src/google/protobuf/cpp_features.pb.cc",
        "src/google/protobuf/cpp_features.pb.h",
        "src/google/protobuf/descriptor_database.cc",
        "src/google/protobuf/descriptor_database.h",
        "src/google/protobuf/descriptor_legacy.h",
        "src/google/protobuf/descriptor_lite.h",
        "src/google/protobuf/descriptor_visitor.h",
        "src/google/protobuf/descriptor.cc",
        "src/google/protobuf/descriptor.h",
        "src/google/protobuf/descriptor.pb.cc",
        "src/google/protobuf/descriptor.pb.h",
        "src/google/protobuf/duration.pb.cc",
        "src/google/protobuf/duration.pb.h",
        "src/google/protobuf/dynamic_message.cc",
        "src/google/protobuf/dynamic_message.h",
        "src/google/protobuf/empty.pb.cc",
        "src/google/protobuf/empty.pb.h",
        "src/google/protobuf/endian.h",
        "src/google/protobuf/explicitly_constructed.h",
        "src/google/protobuf/extension_set_heavy.cc",
        "src/google/protobuf/extension_set_inl.h",
        "src/google/protobuf/extension_set.cc",
        "src/google/protobuf/extension_set.h",
        "src/google/protobuf/feature_resolver.cc",
        "src/google/protobuf/feature_resolver.h",
        "src/google/protobuf/field_access_listener.h",
        "src/google/protobuf/field_mask.pb.cc",
        "src/google/protobuf/field_mask.pb.h",
        "src/google/protobuf/fully_verify_message_sets_opt_out.cc",
        "src/google/protobuf/generated_enum_reflection.h",
        "src/google/protobuf/generated_enum_util.cc",
        "src/google/protobuf/generated_enum_util.h",
        "src/google/protobuf/generated_message_bases.cc",
        "src/google/protobuf/generated_message_bases.h",
        "src/google/protobuf/generated_message_reflection.cc",
        "src/google/protobuf/generated_message_reflection.h",
        "src/google/protobuf/generated_message_tctable_decl.h",
        "src/google/protobuf/generated_message_tctable_full.cc",
        "src/google/protobuf/generated_message_tctable_gen.cc",
        "src/google/protobuf/generated_message_tctable_gen.h",
        "src/google/protobuf/generated_message_tctable_impl.h",
        "src/google/protobuf/generated_message_tctable_lite.cc",
        "src/google/protobuf/generated_message_util.cc",
        "src/google/protobuf/generated_message_util.h",
        "src/google/protobuf/has_bits.h",
        "src/google/protobuf/implicit_weak_message.cc",
        "src/google/protobuf/implicit_weak_message.h",
        "src/google/protobuf/inlined_string_field.cc",
        "src/google/protobuf/inlined_string_field.h",
        "src/google/protobuf/internal_visibility_for_testing.h",
        "src/google/protobuf/internal_visibility.h",
        "src/google/protobuf/map_entry.h",
        "src/google/protobuf/map_field_inl.h",
        "src/google/protobuf/map_field_lite.h",
        "src/google/protobuf/map_field.cc",
        "src/google/protobuf/map_field.h",
        "src/google/protobuf/map_probe_benchmark.cc",
        "src/google/protobuf/map_type_handler.h",
        "src/google/protobuf/map.cc",
        "src/google/protobuf/map.h",
        "src/google/protobuf/message_lite.cc",
        "src/google/protobuf/message_lite.h",
        "src/google/protobuf/message_unittest_legacy_apis.inc",
        "src/google/protobuf/message_unittest.inc",
        "src/google/protobuf/message.cc",
        "src/google/protobuf/message.h",
        "src/google/protobuf/metadata_lite.h",
        "src/google/protobuf/metadata.h",
        "src/google/protobuf/package_info.h",
        "src/google/protobuf/parse_context.cc",
        "src/google/protobuf/parse_context.h",
        "src/google/protobuf/port_def.inc",
        "src/google/protobuf/port_undef.inc",
        "src/google/protobuf/port.cc",
        "src/google/protobuf/port.h",
        "src/google/protobuf/proto3_lite_unittest.inc",
        "src/google/protobuf/raw_ptr.cc",
        "src/google/protobuf/raw_ptr.h",
        "src/google/protobuf/reflection_internal.h",
        "src/google/protobuf/reflection_mode.cc",
        "src/google/protobuf/reflection_mode.h",
        "src/google/protobuf/reflection_ops.cc",
        "src/google/protobuf/reflection_ops.h",
        "src/google/protobuf/reflection_visit_field_info.h",
        "src/google/protobuf/reflection_visit_fields.h",
        "src/google/protobuf/reflection.h",
        "src/google/protobuf/repeated_field_reflection_unittest.inc",
        "src/google/protobuf/repeated_field.cc",
        "src/google/protobuf/repeated_field.h",
        "src/google/protobuf/repeated_ptr_field.cc",
        "src/google/protobuf/repeated_ptr_field.h",
        "src/google/protobuf/runtime_version.h",
        "src/google/protobuf/serial_arena.h",
        "src/google/protobuf/service.cc",
        "src/google/protobuf/service.h",
        "src/google/protobuf/source_context.pb.cc",
        "src/google/protobuf/source_context.pb.h",
        "src/google/protobuf/string_block.h",
        "src/google/protobuf/string_member_robber.h",
        "src/google/protobuf/struct.pb.cc",
        "src/google/protobuf/struct.pb.h",
        "src/google/protobuf/test_textproto.h",
        "src/google/protobuf/test_util.inc",
        "src/google/protobuf/text_format.cc",
        "src/google/protobuf/text_format.h",
        "src/google/protobuf/thread_safe_arena.h",
        "src/google/protobuf/timestamp.pb.cc",
        "src/google/protobuf/timestamp.pb.h",
        "src/google/protobuf/type.pb.cc",
        "src/google/protobuf/type.pb.h",
        "src/google/protobuf/unknown_field_set.cc",
        "src/google/protobuf/unknown_field_set.h",
        "src/google/protobuf/varint_shuffle.h",
        "src/google/protobuf/wire_format_lite.cc",
        "src/google/protobuf/wire_format_lite.h",
        "src/google/protobuf/wire_format_unittest.inc",
        "src/google/protobuf/wire_format.cc",
        "src/google/protobuf/wire_format.h",
        "src/google/protobuf/wrappers.pb.cc",
        "src/google/protobuf/wrappers.pb.h",

        "src/google/protobuf/util/delimited_message_util.cc",
        "src/google/protobuf/util/delimited_message_util.h",
        "src/google/protobuf/util/field_comparator.cc",
        "src/google/protobuf/util/field_comparator.h",
        "src/google/protobuf/util/field_mask_util.cc",
        "src/google/protobuf/util/field_mask_util.h",
        "src/google/protobuf/util/json_util.h",
        "src/google/protobuf/util/message_differencer.cc",
        "src/google/protobuf/util/message_differencer.h",
        "src/google/protobuf/util/package_info.h",
        "src/google/protobuf/util/time_util.cc",
        "src/google/protobuf/util/time_util.h",
        "src/google/protobuf/util/type_resolver_util.cc",
        "src/google/protobuf/util/type_resolver_util.h",
        "src/google/protobuf/util/type_resolver.h",

        "src/google/protobuf/io/coded_stream.cc",
        "src/google/protobuf/io/coded_stream.h",
        "src/google/protobuf/io/gzip_stream.cc",
        "src/google/protobuf/io/gzip_stream.h",
        "src/google/protobuf/io/io_win32.cc",
        "src/google/protobuf/io/io_win32.h",
        "src/google/protobuf/io/package_info.h",
        "src/google/protobuf/io/printer.cc",
        "src/google/protobuf/io/printer.h",
        "src/google/protobuf/io/strtod.cc",
        "src/google/protobuf/io/strtod.h",
        "src/google/protobuf/io/test_zero_copy_stream.h",
        "src/google/protobuf/io/tokenizer.cc",
        "src/google/protobuf/io/tokenizer.h",
        "src/google/protobuf/io/zero_copy_sink.cc",
        "src/google/protobuf/io/zero_copy_sink.h",
        "src/google/protobuf/io/zero_copy_stream_impl_lite.cc",
        "src/google/protobuf/io/zero_copy_stream_impl_lite.h",
        "src/google/protobuf/io/zero_copy_stream_impl.cc",
        "src/google/protobuf/io/zero_copy_stream_impl.h",
        "src/google/protobuf/io/zero_copy_stream.cc",
        "src/google/protobuf/io/zero_copy_stream.h",

        "src/google/protobuf/stubs/callback.h",
        "src/google/protobuf/stubs/common.cc",
        "src/google/protobuf/stubs/common.h",
        "src/google/protobuf/stubs/platform_macros.h",
        "src/google/protobuf/stubs/port.h",
        "src/google/protobuf/stubs/status_macros.h"*/
      ],
      resources: [
        .copy("../PrivacyInfo.xcprivacy"),
      ],
      publicHeadersPath: ".",
      cSettings: [
        .headerSearchPath("./"),
      ]
    )
  ],
  cxxLanguageStandard: .gnucxx14
)

